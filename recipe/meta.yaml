{% set name = "physics-tenpy" %}
{% set version = "1.0.6" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name.replace('-', '_') }}-{{ version }}.tar.gz
  sha256: 5a382a10e4f91ba6a5afd1fb06f065b01a84e590d9ea96057cd0aa1b2b2be119

build:
  number: 1
  script: {{ PYTHON }} -m pip install . -vv
  skip: true  # [python_impl == 'pypy']

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython                                 # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - scipy                                  # [build_platform != target_platform]
    - pip                                    # [build_platform != target_platform]
    - setuptools                             # [build_platform != target_platform]
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
  host:
    - pip
    - setuptools
    - python
    - cython
    - numpy
    - scipy
  run:
    - python
    # 2025-03: scipy.linalg.expm implemented in C from version 1.15 fails tests on windows
    # see https://github.com/scipy/scipy/issues/22558
    # hence I pin them here to scipy < 1.15 for win
    - scipy <1.15      # [win]
    - scipy            # [not win]
    - bottleneck
    - pyyaml
    - h5py

test:
  source_files:
    - tests
    - pyproject.toml
  requires:
    - pytest
    - psutil
  imports:
    - tenpy
  commands:
    - pytest -m "not slow" --ignore=tests/test_examples.py tests

about:
  home: https://github.com/tenpy/tenpy
  license: Apache-2.0
  license_file: LICENSE
  license_url: https://www.apache.org/licenses/LICENSE-2.0
  summary: Simulation of quantum many-body systems with tensor networks in Python
  description: |
    "TeNPy is a package of Python code for the simulation of quantum many-body systems with tensor networks.
    Amongst others, it includes codes for the density matrix renormalization group (DMRG) algorithm
    and the time evolving block decimation (TEBD) algorithm based on matrix product states (MPS).
    The minimal dependency is Python, Numpy and Scipy, but it ships with an optional Cython extension to
    reduce the Python overhead in tensor contractions."
  doc_url: https://tenpy.readthedocs.io/
  dev_url: https://github.com/tenpy/tenpy

extra:
  recipe-maintainers:
    - jhauschild
    - Jakob-Unfried
